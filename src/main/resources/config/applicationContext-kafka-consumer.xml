<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- 定义consumer的参数 -->
	<bean id="consumerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="192.168.25.130:9092,192.168.25.130:9093,192.168.25.130:9094"/>
				<entry key="group.id" value="0"/>
				<entry key="enable.auto.commit" value="true"/>
				<entry key="auto.commit.interval.ms" value="1000"/>
				<entry key="session.timeout.ms" value="15000"/>
				<entry key="key.deserializer" value="org.apache.kafka.common.serialization.IntegerDeserializer"/>
				<entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
			</map>
		</constructor-arg>
	</bean>

	<!-- 创建consumerFactory bean -->
	<bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg>
			<ref bean="consumerProperties"/>
		</constructor-arg>
	</bean>

	<!-- 实际执行消息消费的类 -->
	<!--寄递物流-->
	<bean id="messageListerner0" class="com.landasoft.xysh.listener.KafkaConsumerJidiwuliuLstener"/>

	<!-- 消费者容器配置信息 -->
	<bean id="containerProperties0" class="org.springframework.kafka.listener.config.ContainerProperties">
		<!--处理哪个主题下的消息-->
		<constructor-arg name="topics" value="jidiwuliu"/>
		<!--消息监听-->
		<property name="messageListener" ref="messageListerner0"/>
	</bean>

	<!--重点目标-->
	<bean id="messageListerner1" class="com.landasoft.xysh.listener.KafkaConsumerZhongdianmubiaoLstener"/>

	<bean id="containerProperties1" class="org.springframework.kafka.listener.config.ContainerProperties">
		<!--处理哪个主题下的消息-->
		<constructor-arg name="topics" value="zhongdianmubiao"/>
		<!--消息监听-->
		<property name="messageListener" ref="messageListerner1"/>
	</bean>

	<!-- 创建kafkatemplate bean，使用的时候，只需要注入这个bean -->
	<bean id="messageListenerContainer0" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" init-method="doStart">
		<constructor-arg ref="consumerFactory"/>
		<constructor-arg ref="containerProperties0"/>
	</bean>

	<bean id="messageListenerContainer1" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" init-method="doStart">
		<constructor-arg ref="consumerFactory"/>
		<constructor-arg ref="containerProperties1"/>
	</bean>
</beans>