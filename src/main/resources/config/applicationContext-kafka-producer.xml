<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- 定义producer的参数 -->
	<bean id="producerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<!--指定连接的kafka集群-->
				<entry key="bootstrap.servers" value="192.168.25.130:9092,192.168.25.130:9093,192.168.25.130:9094"/>
				<!--ack应答级别-->
				<entry key="acks" value="all"/>
				<!--组名 消费者 生产者必须组名一致-->
				<entry key="group.id" value="0"/>
				<!--发送失败重试次数-->
				<entry key="retries" value="10"/>
				<!-- 批处理条数：当多个记录被发送到同一个分区时，生产者会尝试将记录合并到更少的请求中。这有助于客户端和服务器的性能。-->
				<entry key="batch.size" value="16384"/><!--16k-->
				<!--批处理延迟时间上限：即1ms过后，不管是否达到批处理数，都直接发送一次请求-->
				<entry key="linger.ms" value="1"/>
				<!-- 即32MB的批处理缓冲区-->
				<entry key="buffer.memory" value="33554432"/>
				<!--键的序列化-->
				<entry key="key.serializer" value="org.apache.kafka.common.serialization.IntegerSerializer"/>
				<!--值得序列化-->
				<entry key="value.serializer" value="org.apache.kafka.common.serialization.StringSerializer"/>
			</map>
		</constructor-arg>
	</bean>

	<!-- 创建kafkatemplate需要使用的producerFactory bean -->
	<bean id="producerFactory" class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
		<constructor-arg>
			<ref bean="producerProperties"/>
		</constructor-arg>
	</bean>

	<!-- 创建kafkatemplate bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 -->
	<bean id="kafkaTemplate_jidiwuliu" class="org.springframework.kafka.core.KafkaTemplate">
		<constructor-arg ref="producerFactory"/>
		<!--是否自动刷新-->
		<constructor-arg name="autoFlush" value="true"/>
		<!--默认的主题 -->
		<property name="defaultTopic" value="jidiwuliu"/>
	</bean>

	<bean id="kafkaTemplate_zhongdianmubiao" class="org.springframework.kafka.core.KafkaTemplate">
		<constructor-arg ref="producerFactory"/>
		<!--是否自动刷新-->
		<constructor-arg name="autoFlush" value="true"/>
		<!--默认的主题 -->
		<property name="defaultTopic" value="zhongdianmubiao"/>
	</bean>

</beans>